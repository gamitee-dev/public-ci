name: 'Lint Git History'

on:
  workflow_call:
    inputs:

      min-behind:
        type: number
        description: |
          `n = 0` - `HEAD` may be behind.
          `n = 1` - `HEAD` must be behind.
          `n ≥ 2` - `HEAD` must be behind by at least `n` commits.

      max-behind:
        type: number
        description: |
          `n = 0` - `HEAD` cannot be behind
          `n = 1` - `HEAD` may be behind by a single commit.
          `n ≥ 2` - `HEAD` may be behind by up to `n` commits.


      min-ahead:
        type: number
        description: |
          `n = 0` - `HEAD` may be ahead.
          `n = 1` - `HEAD` must be ahead.
          `n ≥ 2` - `HEAD` must be ahead by at least `n` commits.

      max-ahead:
        type: number
        description: |
          `n = 0` - `HEAD` cannot be ahead.
          `n = 1` - `HEAD` may be ahead by a single commit.
          `n ≥ 2` - `HEAD` may be ahead by up to `n` commits.


      min-parents:
        type: number
        description: |
          `n = 0` - `HEAD` branch commits may have parents.
          `n = 1` - `HEAD` branch commits must have a parent.
          `n = 2` - `HEAD` branch commits must be merge commits.
          `n = 3` - `HEAD` branch commits must be octopus commits.
          `n ≥ 3` - `HEAD` branch commits cannot have less than `n` parents.

      max-parents:
        type: number
        description: |
          `n = 0` - `HEAD` branch commits cannot have parents.
          `n = 1` - `HEAD` branch commits may have a parent.
          `n = 2` - `HEAD` branch commits may be merge commits.
          `n = 3` - `HEAD` branch commits may be octopus commits.
          `n ≥ 3` - `HEAD` branch commits cannot have more than `n` parents.

env:
  FORWARD_RANGE: "${{github.base_ref}}..${{github.head_ref}} -- ."
  BACKWARD_RANGE: "${{github.head_ref}}..${{github.base_ref}} -- ."

jobs:

  lint-commit-count-behind:
    if: ${{github.event.pull_request && (inputs.min-behind >= 0 || inputs.max-behind >= 0)}}
    name: Lint commit count behind (${{github.head_ref}}..${{github.base_ref}})
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 10 # //TODO ...

      - id: 'count-commits-behind'
        name: 'Count commits behind'
        run: |
          COUNT="$(git rev-list --count ${{env.BACKWARD_RANGE}})"
          echo "COUNT=${COUNT}" >> "${GITHUB_OUTPUT}"

      - id: 'log-commits-behind'
        name: Found ${{steps.count-commits-behind.outputs.COUNT}} commits behind
        run: git log --oneline --parents --graph ${{env.BACKWARD_RANGE}}

      - if: ${{inputs.min-behind > 0}}
        id: 'assert-min-behind'
        name: 'Assert min behind by ${{inputs.min-behind}} commits'
        run: (( ${{steps.count-commits-behind.outputs.COUNT}} >= ${{inputs.min-behind}} ))

      - if: ${{inputs.max-behind >= 0}}
        id: 'assert-max-behind'
        name: 'Assert max behind by ${{inputs.max-behind}} commits'
        run: (( ${{steps.count-commits-behind.outputs.COUNT}} <= ${{inputs.max-behind}} ))

  lint-commit-count-ahead:
    if: ${{github.event.pull_request && (inputs.min-ahead >= 0 || inputs.max-ahead >= 0)}}
    name: Lint commit count ahead (${{github.base_ref}}..${{github.head_ref}})
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - id: 'count-commits-ahead'
        name: 'Count commits ahead'
        run: |
          COUNT="$(git rev-list --count ${{env.FORWARD_RANGE}})"
          echo "COUNT=${COUNT}" >> "${GITHUB_OUTPUT}"

      - id: 'log-commits-ahead'
        name: 'Found ${{steps.count-commits-ahead.outputs.COUNT}} commits ahead'
        run: git log --oneline --parents --graph ${{env.FORWARD_RANGE}}

      - if: ${{inputs.min-ahead > 0}}
        id: 'assert-min-ahead'
        name: 'Assert min ahead by ${{inputs.min-ahead}} commits)'
        run: (( ${{steps.count-commits-ahead.outputs.COUNT}} >= ${{inputs.min-ahead}} ))

      - if: ${{inputs.max-ahead >= 0}}
        id: 'assert-max-ahead'
        name: 'Assert max ahead by ${{inputs.max-ahead}} commits'
        run: (( ${{steps.count-commits-ahead.outputs.COUNT}} <= ${{inputs.max-ahead}} ))

  lint-min-parents:
    # Note: Cannot run when `= 0` due to subtraction
    if: ${{github.event.pull_request && inputs.min-parents > 0}}
    name: 'Lint min of ${{inputs.min-parents}} parents for commits of ${{github.head_ref}}'
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4

      - id: 'count-invalid-min-parents'
        name: 'Count invalid min parents'
        run: |
          MAX="$(( ${{inputs.min-parents}} - 1 ))"
          echo "MAX=${MAX}" >> "${GITHUB_OUTPUT}"
          COUNT="$(git rev-list --count --max-parents="${MAX}" ${{env.FORWARD_RANGE}})"
          echo "COUNT=${COUNT}" >> "${GITHUB_OUTPUT}"

      - id: 'log-invalid-min-parents'
        name: 'Found ${{steps.count-invalid-min-parents.outputs.COUNT}} commits with less than ${{inputs.min-parents}} parents'
        run: git log --oneline --parents --graph --max-parents="${{steps.count-invalid-min-parents.outputs.MAX}}" ${{env.FORWARD_RANGE}}
  
      - id: 'assert-min-parents'
        name: 'Assert no less then ${{inputs.min-parents}} parent (for all commits)'
        run: (( ${{steps.count-invalid-min-parents.outputs.COUNT}} == 0 ))

  lint-max-parents:
    if: ${{github.event.pull_request && inputs.max-parents >= 0}}
    name: 'Lint max of ${{inputs.max-parents}} parents for commits of ${{github.head_ref}}'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - id: 'count-invalid-max-parents'
        name: 'Count invalid max parents'
        run: |
          MIN="$(( ${{inputs.max-parents}} + 1 ))"
          echo "MIN=${MIN}" >> "${GITHUB_OUTPUT}"
          COUNT="$(git rev-list --count --min-parents="${MIN}" ${{env.FORWARD_RANGE}})"
          echo "COUNT=${COUNT}" >> "${GITHUB_OUTPUT}"

      - id: 'log-invalid-max-parents'
        name: 'Found ${{steps.count-invalid-max-parents.outputs.COUNT}} commits with more than ${{inputs.max-parents}} parents'
        run: git log --oneline --parents --graph --min-parents="${{steps.count-invalid-max-parents.outputs.MIN}}" ${{env.FORWARD_RANGE}}
  
      - id: 'assert-max-parents'
        name: 'Assert no more than ${{inputs.min-parents}} parents (for all commits)'
        run: (( ${{steps.count-invalid-max-parents.outputs.COUNT}} == 0 ))
